@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --color1: #8ecae6;
  --color2: #219ebc;
  --color3: #023047;
  --color4: #ffb703;
  --color5: #fb8500;

  --blackSwitch: #000;
  --whiteSwitch: #fff;

  --successColor: #048400;
  --errorColor: #841200;

  --gray1: #777;
  --gray2: #c0c0c0;

  --largeFontSize: 1.5rem;
  --smallFontSize: .7rem;
}

*,
*::before,
*::after {
  /* border: 1px solid red !important; */
}

label {
  font-weight: bold;
  text-transform: capitalize;
}

input,
textarea {
  padding: 1rem;
  background-color: var(--whiteSwitch);
  color: var(--blackSwitch);
  border-radius: .2rem;
  border: 1px solid var(--blackSwitch);
}

input:focus,
textarea:focus {
  outline: none;
}


section {
  padding: 2rem 1rem;
}



svg {
  width: 1rem;
  aspect-ratio: 1/1;
  fill: var(--whiteSwitch);
  cursor: pointer;
  scale: 1;
  transition: scale 400ms;
}

svg:hover {
  scale: 1.1;
}

.closeSvg>svg {
  fill: var(--color4);
  width: 2rem;
  transition: fill 400ms, rotate 200ms;
}

.closeSvg:hover>svg {
  fill: var(--color5);
}


h1 {
  font-size: var(--largeFontSize);
  font-weight: bold;
  font-family: roboto;
}

h2 {
  font-family: inter;
  text-transform: uppercase;
  font-weight: bold;
}

h2>.tag {
  padding: .5rem 1rem;
  border-radius: .3rem;
  background-color: var(--color4);
  margin-right: .5rem;
  font-weight: normal;
  color: var(--whiteSwitch);
}

h3 {
  font-weight: bold;
}






button:disabled {
  opacity: .8;
}

.mainButton {
  cursor: pointer;
  background-color: var(--color5);
  text-transform: uppercase;
  color: #fff;
  padding: 1rem 2rem;
  transition: background-color 200ms, scale 200ms;
  justify-self: center;
  font-weight: bold;
  border: 2px solid transparent;
  scale: 1;
  letter-spacing: 1px;
  user-select: none;
}

.mainButton:hover {
  background-color: var(--color4);
  border: 2px solid var(--whiteSwitch);
  scale: 1.05;
}


.smallButton {
  /* settings buttons choice */
  cursor: pointer;
  justify-self: flex-start;
  padding: .5rem .5rem;
  background-color: var(--color3);
  text-transform: uppercase;
  color: #fff;
  font-size: var(--smallFontSize);
  transition: background-color 200ms;
  display: flex;
  gap: .5rem;
  user-select: none;
}

.smallButton:hover {
  /* settings buttons choice */
  background-color: var(--color2);
}

.option {
  /* option is list */
  background-color: var(--blackSwitch);
  text-transform: capitalize;
  color: var(--whiteSwitch);
  padding: .5rem 1rem;
  font-size: var(--smallFontSize);
  border-radius: .5rem;
  cursor: pointer;
  user-select: none;
}





.smallText {
  font-size: var(--smallFontSize);
}

.smallButtonLink {
  display: flex;
  gap: .5rem;
  justify-content: center;
  cursor: pointer;
  font-size: var(--smallFontSize);
  transition: color 50ms, fill 50ms;
}

.smallButtonLink * {
  transition: color 50ms, fill 50ms;
}

.smallButtonLink:hover * {
  color: grey;
  fill: grey;
}

.noScrollBar::-webkit-scrollbar {
  display: none;
}


.niceScrollbar::-webkit-scrollbar {
  height: 5px;
  width: 5px;
  border-radius: 1rem;
}

.niceScrollbar::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 1rem;
  width: 1px;

}

.niceScrollbar::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.snap {
  scroll-snap-type: x mandatory;
}

.snap>* {
  scroll-snap-align: start;
}



.userComponentSelectButton {
  cursor: pointer;
  /* position: absolute;
  right: 1rem;
  top: 1rem;
  cursor: pointer;
  opacity: .5; */
}

.userComponentSelectButton>svg {
  fill: var(--color3);
}



@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.noExternalStyles * {
  all: unset;
}